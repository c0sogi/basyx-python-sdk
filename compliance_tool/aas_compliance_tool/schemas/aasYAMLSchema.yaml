$id: https://admin-shell.io/aas/3/0
$schema: https://json-schema.org/draft/2019-09/schema
allOf:
- $ref: '#/definitions/Environment'
definitions:
  AasSubmodelElements:
    enum:
    - AnnotatedRelationshipElement
    - BasicEventElement
    - Blob
    - Capability
    - DataElement
    - Entity
    - EventElement
    - File
    - MultiLanguageProperty
    - Operation
    - Property
    - Range
    - ReferenceElement
    - RelationshipElement
    - SubmodelElement
    - SubmodelElementCollection
    - SubmodelElementList
    type: string
  AbstractLangString:
    properties:
      language:
        pattern: ^(([a-zA-Z]{2,3}(-[a-zA-Z]{3}(-[a-zA-Z]{3}){2})?|[a-zA-Z]{4}|[a-zA-Z]{5,8})(-[a-zA-Z]{4})?(-([a-zA-Z]{2}|[0-9]{3}))?(-(([a-zA-Z0-9]){5,8}|[0-9]([a-zA-Z0-9]){3}))*(-[0-9A-WY-Za-wy-z](-([a-zA-Z0-9]){2,8})+)*(-[xX](-([a-zA-Z0-9]){1,8})+)?|[xX](-([a-zA-Z0-9]){1,8})+|((en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang)))$
        type: string
      text:
        minLength: 1
        pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
          ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
        type: string
    required:
    - language
    - text
    type: object
  AdministrativeInformation:
    allOf:
    - $ref: '#/definitions/HasDataSpecification'
    - properties:
        creator:
          $ref: '#/definitions/Reference'
        revision:
          allOf:
          - maxLength: 4
            minLength: 1
          - pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
              ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          - pattern: ^(0|[1-9][0-9]*)$
          type: string
        templateId:
          maxLength: 2000
          minLength: 1
          pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        version:
          allOf:
          - maxLength: 4
            minLength: 1
          - pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
              ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          - pattern: ^(0|[1-9][0-9]*)$
          type: string
  AnnotatedRelationshipElement:
    allOf:
    - $ref: '#/definitions/RelationshipElement_abstract'
    - properties:
        annotations:
          items:
            $ref: '#/definitions/DataElement_choice'
          minItems: 1
          type: array
        modelType:
          const: AnnotatedRelationshipElement
  AssetAdministrationShell:
    allOf:
    - $ref: '#/definitions/Identifiable'
    - $ref: '#/definitions/HasDataSpecification'
    - properties:
        assetInformation:
          $ref: '#/definitions/AssetInformation'
        derivedFrom:
          $ref: '#/definitions/Reference'
        modelType:
          const: AssetAdministrationShell
        submodels:
          items:
            $ref: '#/definitions/Reference'
          minItems: 1
          type: array
      required:
      - assetInformation
  AssetInformation:
    properties:
      assetKind:
        $ref: '#/definitions/AssetKind'
      assetType:
        maxLength: 2000
        minLength: 1
        pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
          ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
        type: string
      defaultThumbnail:
        $ref: '#/definitions/Resource'
      globalAssetId:
        maxLength: 2000
        minLength: 1
        pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
          ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
        type: string
      specificAssetIds:
        items:
          $ref: '#/definitions/SpecificAssetId'
        minItems: 1
        type: array
    required:
    - assetKind
    type: object
  AssetKind:
    enum:
    - Instance
    - NotApplicable
    - Type
    type: string
  BasicEventElement:
    allOf:
    - $ref: '#/definitions/EventElement'
    - properties:
        direction:
          $ref: '#/definitions/Direction'
        lastUpdate:
          pattern: ^-?(([1-9][0-9][0-9][0-9]+)|(0[0-9][0-9][0-9]))-((0[1-9])|(1[0-2]))-((0[1-9])|([12][0-9])|(3[01]))T(((([01][0-9])|(2[0-3])):[0-5][0-9]:([0-5][0-9])(\.[0-9]+)?)|24:00:00(\.0+)?)(Z|\+00:00|-00:00)$
          type: string
        maxInterval:
          pattern: ^-?P((([0-9]+Y([0-9]+M)?([0-9]+D)?|([0-9]+M)([0-9]+D)?|([0-9]+D))(T(([0-9]+H)([0-9]+M)?([0-9]+(\.[0-9]+)?S)?|([0-9]+M)([0-9]+(\.[0-9]+)?S)?|([0-9]+(\.[0-9]+)?S)))?)|(T(([0-9]+H)([0-9]+M)?([0-9]+(\.[0-9]+)?S)?|([0-9]+M)([0-9]+(\.[0-9]+)?S)?|([0-9]+(\.[0-9]+)?S))))$
          type: string
        messageBroker:
          $ref: '#/definitions/Reference'
        messageTopic:
          maxLength: 255
          minLength: 1
          pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        minInterval:
          pattern: ^-?P((([0-9]+Y([0-9]+M)?([0-9]+D)?|([0-9]+M)([0-9]+D)?|([0-9]+D))(T(([0-9]+H)([0-9]+M)?([0-9]+(\.[0-9]+)?S)?|([0-9]+M)([0-9]+(\.[0-9]+)?S)?|([0-9]+(\.[0-9]+)?S)))?)|(T(([0-9]+H)([0-9]+M)?([0-9]+(\.[0-9]+)?S)?|([0-9]+M)([0-9]+(\.[0-9]+)?S)?|([0-9]+(\.[0-9]+)?S))))$
          type: string
        modelType:
          const: BasicEventElement
        observed:
          $ref: '#/definitions/Reference'
        state:
          $ref: '#/definitions/StateOfEvent'
      required:
      - observed
      - direction
      - state
  Blob:
    allOf:
    - $ref: '#/definitions/DataElement'
    - properties:
        contentType:
          allOf:
          - maxLength: 100
            minLength: 1
          - pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
              ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          - pattern: "^([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+/([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+([\
              \ \\t]*;[ \\t]*([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+=(([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+|\"\
              (([\\t !#-\\[\\]-~]|[\x80-\xFF])|\\\\([\\t !-~]|[\x80-\xFF]))*\"))*$"
          type: string
        modelType:
          const: Blob
        value:
          contentEncoding: base64
          type: string
      required:
      - contentType
  Capability:
    allOf:
    - $ref: '#/definitions/SubmodelElement'
    - properties:
        modelType:
          const: Capability
  ConceptDescription:
    allOf:
    - $ref: '#/definitions/Identifiable'
    - $ref: '#/definitions/HasDataSpecification'
    - properties:
        isCaseOf:
          items:
            $ref: '#/definitions/Reference'
          minItems: 1
          type: array
        modelType:
          const: ConceptDescription
  DataElement:
    $ref: '#/definitions/SubmodelElement'
  DataElement_choice:
    oneOf:
    - $ref: '#/definitions/Blob'
    - $ref: '#/definitions/File'
    - $ref: '#/definitions/MultiLanguageProperty'
    - $ref: '#/definitions/Property'
    - $ref: '#/definitions/Range'
    - $ref: '#/definitions/ReferenceElement'
  DataSpecificationContent:
    properties:
      modelType:
        $ref: '#/definitions/ModelType'
    required:
    - modelType
    type: object
  DataSpecificationContent_choice:
    oneOf:
    - $ref: '#/definitions/DataSpecificationIec61360'
  DataSpecificationIec61360:
    allOf:
    - $ref: '#/definitions/DataSpecificationContent'
    - properties:
        dataType:
          $ref: '#/definitions/DataTypeIec61360'
        definition:
          items:
            $ref: '#/definitions/LangStringDefinitionTypeIec61360'
          minItems: 1
          type: array
        levelType:
          $ref: '#/definitions/LevelType'
        modelType:
          const: DataSpecificationIec61360
        preferredName:
          items:
            $ref: '#/definitions/LangStringPreferredNameTypeIec61360'
          minItems: 1
          type: array
        shortName:
          items:
            $ref: '#/definitions/LangStringShortNameTypeIec61360'
          minItems: 1
          type: array
        sourceOfDefinition:
          minLength: 1
          pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        symbol:
          minLength: 1
          pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        unit:
          minLength: 1
          pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        unitId:
          $ref: '#/definitions/Reference'
        value:
          maxLength: 2000
          minLength: 1
          pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        valueFormat:
          minLength: 1
          pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        valueList:
          $ref: '#/definitions/ValueList'
      required:
      - preferredName
  DataTypeDefXsd:
    enum:
    - xs:anyURI
    - xs:base64Binary
    - xs:boolean
    - xs:byte
    - xs:date
    - xs:dateTime
    - xs:decimal
    - xs:double
    - xs:duration
    - xs:float
    - xs:gDay
    - xs:gMonth
    - xs:gMonthDay
    - xs:gYear
    - xs:gYearMonth
    - xs:hexBinary
    - xs:int
    - xs:integer
    - xs:long
    - xs:negativeInteger
    - xs:nonNegativeInteger
    - xs:nonPositiveInteger
    - xs:positiveInteger
    - xs:short
    - xs:string
    - xs:time
    - xs:unsignedByte
    - xs:unsignedInt
    - xs:unsignedLong
    - xs:unsignedShort
    type: string
  DataTypeIec61360:
    enum:
    - BLOB
    - BOOLEAN
    - DATE
    - FILE
    - HTML
    - INTEGER_COUNT
    - INTEGER_CURRENCY
    - INTEGER_MEASURE
    - IRDI
    - IRI
    - RATIONAL
    - RATIONAL_MEASURE
    - REAL_COUNT
    - REAL_CURRENCY
    - REAL_MEASURE
    - STRING
    - STRING_TRANSLATABLE
    - TIME
    - TIMESTAMP
    type: string
  Direction:
    enum:
    - input
    - output
    type: string
  EmbeddedDataSpecification:
    properties:
      dataSpecification:
        $ref: '#/definitions/Reference'
      dataSpecificationContent:
        $ref: '#/definitions/DataSpecificationContent_choice'
    required:
    - dataSpecification
    - dataSpecificationContent
    type: object
  Entity:
    allOf:
    - $ref: '#/definitions/SubmodelElement'
    - properties:
        entityType:
          $ref: '#/definitions/EntityType'
        globalAssetId:
          maxLength: 2000
          minLength: 1
          pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        modelType:
          const: Entity
        specificAssetIds:
          items:
            $ref: '#/definitions/SpecificAssetId'
          minItems: 1
          type: array
        statements:
          items:
            $ref: '#/definitions/SubmodelElement_choice'
          minItems: 1
          type: array
      required:
      - entityType
  EntityType:
    enum:
    - CoManagedEntity
    - SelfManagedEntity
    type: string
  Environment:
    properties:
      assetAdministrationShells:
        items:
          $ref: '#/definitions/AssetAdministrationShell'
        minItems: 1
        type: array
      conceptDescriptions:
        items:
          $ref: '#/definitions/ConceptDescription'
        minItems: 1
        type: array
      submodels:
        items:
          $ref: '#/definitions/Submodel'
        minItems: 1
        type: array
    type: object
  EventElement:
    $ref: '#/definitions/SubmodelElement'
  EventPayload:
    properties:
      observableReference:
        $ref: '#/definitions/Reference'
      observableSemanticId:
        $ref: '#/definitions/Reference'
      payload:
        contentEncoding: base64
        type: string
      source:
        $ref: '#/definitions/Reference'
      sourceSemanticId:
        $ref: '#/definitions/Reference'
      subjectId:
        $ref: '#/definitions/Reference'
      timeStamp:
        pattern: ^-?(([1-9][0-9][0-9][0-9]+)|(0[0-9][0-9][0-9]))-((0[1-9])|(1[0-2]))-((0[1-9])|([12][0-9])|(3[01]))T(((([01][0-9])|(2[0-3])):[0-5][0-9]:([0-5][0-9])(\.[0-9]+)?)|24:00:00(\.0+)?)(Z|\+00:00|-00:00)$
        type: string
      topic:
        maxLength: 255
        minLength: 1
        pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
          ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
        type: string
    required:
    - source
    - observableReference
    - timeStamp
    type: object
  Extension:
    allOf:
    - $ref: '#/definitions/HasSemantics'
    - properties:
        name:
          maxLength: 128
          minLength: 1
          pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        refersTo:
          items:
            $ref: '#/definitions/Reference'
          minItems: 1
          type: array
        value:
          type: string
        valueType:
          $ref: '#/definitions/DataTypeDefXsd'
      required:
      - name
  File:
    allOf:
    - $ref: '#/definitions/DataElement'
    - properties:
        contentType:
          allOf:
          - maxLength: 100
            minLength: 1
          - pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
              ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          - pattern: "^([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+/([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+([\
              \ \\t]*;[ \\t]*([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+=(([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+|\"\
              (([\\t !#-\\[\\]-~]|[\x80-\xFF])|\\\\([\\t !-~]|[\x80-\xFF]))*\"))*$"
          type: string
        modelType:
          const: File
        value:
          type: string
      required:
      - contentType
  HasDataSpecification:
    properties:
      embeddedDataSpecifications:
        items:
          $ref: '#/definitions/EmbeddedDataSpecification'
        minItems: 1
        type: array
    type: object
  HasExtensions:
    properties:
      extensions:
        items:
          $ref: '#/definitions/Extension'
        minItems: 1
        type: array
    type: object
  HasKind:
    properties:
      kind:
        $ref: '#/definitions/ModellingKind'
    type: object
  HasSemantics:
    properties:
      semanticId:
        $ref: '#/definitions/Reference'
      supplementalSemanticIds:
        items:
          $ref: '#/definitions/Reference'
        minItems: 1
        type: array
    type: object
  Identifiable:
    allOf:
    - $ref: '#/definitions/Referable'
    - properties:
        administration:
          $ref: '#/definitions/AdministrativeInformation'
        id:
          maxLength: 2000
          minLength: 1
          pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
      required:
      - id
  Key:
    properties:
      type:
        $ref: '#/definitions/KeyTypes'
      value:
        maxLength: 2000
        minLength: 1
        pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
          ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
        type: string
    required:
    - type
    - value
    type: object
  KeyTypes:
    enum:
    - AnnotatedRelationshipElement
    - AssetAdministrationShell
    - BasicEventElement
    - Blob
    - Capability
    - ConceptDescription
    - DataElement
    - Entity
    - EventElement
    - File
    - FragmentReference
    - GlobalReference
    - Identifiable
    - MultiLanguageProperty
    - Operation
    - Property
    - Range
    - Referable
    - ReferenceElement
    - RelationshipElement
    - Submodel
    - SubmodelElement
    - SubmodelElementCollection
    - SubmodelElementList
    type: string
  LangStringDefinitionTypeIec61360:
    allOf:
    - $ref: '#/definitions/AbstractLangString'
    - properties:
        text:
          maxLength: 1023
  LangStringNameType:
    allOf:
    - $ref: '#/definitions/AbstractLangString'
    - properties:
        text:
          maxLength: 128
  LangStringPreferredNameTypeIec61360:
    allOf:
    - $ref: '#/definitions/AbstractLangString'
    - properties:
        text:
          maxLength: 255
  LangStringShortNameTypeIec61360:
    allOf:
    - $ref: '#/definitions/AbstractLangString'
    - properties:
        text:
          maxLength: 18
  LangStringTextType:
    allOf:
    - $ref: '#/definitions/AbstractLangString'
    - properties:
        text:
          maxLength: 1023
  LevelType:
    properties:
      max:
        type: boolean
      min:
        type: boolean
      nom:
        type: boolean
      typ:
        type: boolean
    required:
    - min
    - nom
    - typ
    - max
    type: object
  ModelType:
    enum:
    - AnnotatedRelationshipElement
    - AssetAdministrationShell
    - BasicEventElement
    - Blob
    - Capability
    - ConceptDescription
    - DataSpecificationIec61360
    - Entity
    - File
    - MultiLanguageProperty
    - Operation
    - Property
    - Range
    - ReferenceElement
    - RelationshipElement
    - Submodel
    - SubmodelElementCollection
    - SubmodelElementList
    type: string
  ModellingKind:
    enum:
    - Instance
    - Template
    type: string
  MultiLanguageProperty:
    allOf:
    - $ref: '#/definitions/DataElement'
    - properties:
        modelType:
          const: MultiLanguageProperty
        value:
          items:
            $ref: '#/definitions/LangStringTextType'
          minItems: 1
          type: array
        valueId:
          $ref: '#/definitions/Reference'
  Operation:
    allOf:
    - $ref: '#/definitions/SubmodelElement'
    - properties:
        inoutputVariables:
          items:
            $ref: '#/definitions/OperationVariable'
          minItems: 1
          type: array
        inputVariables:
          items:
            $ref: '#/definitions/OperationVariable'
          minItems: 1
          type: array
        modelType:
          const: Operation
        outputVariables:
          items:
            $ref: '#/definitions/OperationVariable'
          minItems: 1
          type: array
  OperationVariable:
    properties:
      value:
        $ref: '#/definitions/SubmodelElement_choice'
    required:
    - value
    type: object
  Property:
    allOf:
    - $ref: '#/definitions/DataElement'
    - properties:
        modelType:
          const: Property
        value:
          type: string
        valueId:
          $ref: '#/definitions/Reference'
        valueType:
          $ref: '#/definitions/DataTypeDefXsd'
      required:
      - valueType
  Qualifiable:
    properties:
      modelType:
        $ref: '#/definitions/ModelType'
      qualifiers:
        items:
          $ref: '#/definitions/Qualifier'
        minItems: 1
        type: array
    required:
    - modelType
    type: object
  Qualifier:
    allOf:
    - $ref: '#/definitions/HasSemantics'
    - properties:
        kind:
          $ref: '#/definitions/QualifierKind'
        type:
          maxLength: 128
          minLength: 1
          pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        value:
          type: string
        valueId:
          $ref: '#/definitions/Reference'
        valueType:
          $ref: '#/definitions/DataTypeDefXsd'
      required:
      - type
      - valueType
  QualifierKind:
    enum:
    - ConceptQualifier
    - TemplateQualifier
    - ValueQualifier
    type: string
  Range:
    allOf:
    - $ref: '#/definitions/DataElement'
    - properties:
        max:
          type: string
        min:
          type: string
        modelType:
          const: Range
        valueType:
          $ref: '#/definitions/DataTypeDefXsd'
      required:
      - valueType
  Referable:
    allOf:
    - $ref: '#/definitions/HasExtensions'
    - properties:
        category:
          maxLength: 128
          minLength: 1
          pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        description:
          items:
            $ref: '#/definitions/LangStringTextType'
          minItems: 1
          type: array
        displayName:
          items:
            $ref: '#/definitions/LangStringNameType'
          minItems: 1
          type: array
        idShort:
          allOf:
          - maxLength: 128
            minLength: 1
          - pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
              ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          - pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
          type: string
        modelType:
          $ref: '#/definitions/ModelType'
      required:
      - modelType
  Reference:
    properties:
      keys:
        items:
          $ref: '#/definitions/Key'
        minItems: 1
        type: array
      referredSemanticId:
        $ref: '#/definitions/Reference'
      type:
        $ref: '#/definitions/ReferenceTypes'
    required:
    - type
    - keys
    type: object
  ReferenceElement:
    allOf:
    - $ref: '#/definitions/DataElement'
    - properties:
        modelType:
          const: ReferenceElement
        value:
          $ref: '#/definitions/Reference'
  ReferenceTypes:
    enum:
    - ExternalReference
    - ModelReference
    type: string
  RelationshipElement:
    allOf:
    - $ref: '#/definitions/RelationshipElement_abstract'
    - properties:
        modelType:
          const: RelationshipElement
  RelationshipElement_abstract:
    allOf:
    - $ref: '#/definitions/SubmodelElement'
    - properties:
        first:
          $ref: '#/definitions/Reference'
        second:
          $ref: '#/definitions/Reference'
      required:
      - first
      - second
  RelationshipElement_choice:
    oneOf:
    - $ref: '#/definitions/RelationshipElement'
    - $ref: '#/definitions/AnnotatedRelationshipElement'
  Resource:
    properties:
      contentType:
        allOf:
        - maxLength: 100
          minLength: 1
        - pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
        - pattern: "^([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+/([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+([\
            \ \\t]*;[ \\t]*([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+=(([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+|\"\
            (([\\t !#-\\[\\]-~]|[\x80-\xFF])|\\\\([\\t !-~]|[\x80-\xFF]))*\"))*$"
        type: string
      path:
        allOf:
        - maxLength: 2000
          minLength: 1
        - pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
        - pattern: ^file:(//((localhost|(\[((([0-9A-Fa-f]{1,4}:){6}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|::([0-9A-Fa-f]{1,4}:){5}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|([0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){4}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){3}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:){2}[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){2}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:){3}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:){4}[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:){5}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}|(([0-9A-Fa-f]{1,4}:){6}[0-9A-Fa-f]{1,4})?::)|[vV][0-9A-Fa-f]+\.([a-zA-Z0-9\-._~]|[!$&'()*+,;=]|:)+)\]|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|([a-zA-Z0-9\-._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=])*)))?/((([a-zA-Z0-9\-._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=]|[:@]))+(/(([a-zA-Z0-9\-._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=]|[:@]))*)*)?|/((([a-zA-Z0-9\-._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=]|[:@]))+(/(([a-zA-Z0-9\-._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=]|[:@]))*)*)?)$
        type: string
    required:
    - path
    type: object
  SpecificAssetId:
    allOf:
    - $ref: '#/definitions/HasSemantics'
    - properties:
        externalSubjectId:
          $ref: '#/definitions/Reference'
        name:
          maxLength: 64
          minLength: 1
          pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        value:
          maxLength: 2000
          minLength: 1
          pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
      required:
      - name
      - value
  StateOfEvent:
    enum:
    - 'off'
    - 'on'
    type: string
  Submodel:
    allOf:
    - $ref: '#/definitions/Identifiable'
    - $ref: '#/definitions/HasKind'
    - $ref: '#/definitions/HasSemantics'
    - $ref: '#/definitions/Qualifiable'
    - $ref: '#/definitions/HasDataSpecification'
    - properties:
        modelType:
          const: Submodel
        submodelElements:
          items:
            $ref: '#/definitions/SubmodelElement_choice'
          minItems: 1
          type: array
  SubmodelElement:
    allOf:
    - $ref: '#/definitions/Referable'
    - $ref: '#/definitions/HasSemantics'
    - $ref: '#/definitions/Qualifiable'
    - $ref: '#/definitions/HasDataSpecification'
  SubmodelElementCollection:
    allOf:
    - $ref: '#/definitions/SubmodelElement'
    - properties:
        modelType:
          const: SubmodelElementCollection
        value:
          items:
            $ref: '#/definitions/SubmodelElement_choice'
          minItems: 1
          type: array
  SubmodelElementList:
    allOf:
    - $ref: '#/definitions/SubmodelElement'
    - properties:
        modelType:
          const: SubmodelElementList
        orderRelevant:
          type: boolean
        semanticIdListElement:
          $ref: '#/definitions/Reference'
        typeValueListElement:
          $ref: '#/definitions/AasSubmodelElements'
        value:
          items:
            $ref: '#/definitions/SubmodelElement_choice'
          minItems: 1
          type: array
        valueTypeListElement:
          $ref: '#/definitions/DataTypeDefXsd'
      required:
      - typeValueListElement
  SubmodelElement_choice:
    oneOf:
    - $ref: '#/definitions/RelationshipElement'
    - $ref: '#/definitions/AnnotatedRelationshipElement'
    - $ref: '#/definitions/BasicEventElement'
    - $ref: '#/definitions/Blob'
    - $ref: '#/definitions/Capability'
    - $ref: '#/definitions/Entity'
    - $ref: '#/definitions/File'
    - $ref: '#/definitions/MultiLanguageProperty'
    - $ref: '#/definitions/Operation'
    - $ref: '#/definitions/Property'
    - $ref: '#/definitions/Range'
    - $ref: '#/definitions/ReferenceElement'
    - $ref: '#/definitions/SubmodelElementCollection'
    - $ref: '#/definitions/SubmodelElementList'
  ValueList:
    properties:
      valueReferencePairs:
        items:
          $ref: '#/definitions/ValueReferencePair'
        minItems: 1
        type: array
    required:
    - valueReferencePairs
    type: object
  ValueReferencePair:
    properties:
      value:
        maxLength: 2000
        minLength: 1
        pattern: "^([\\t\\n\\r -\uD7FF\uE000-\uFFFD]|\\ud800[\\udc00-\\udfff]|[\\\
          ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
        type: string
      valueId:
        $ref: '#/definitions/Reference'
    required:
    - value
    - valueId
    type: object
title: AssetAdministrationShellEnvironment
type: object
